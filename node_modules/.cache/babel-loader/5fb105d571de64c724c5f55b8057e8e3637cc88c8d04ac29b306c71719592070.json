{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romir\\\\Desktop\\\\01_SHOPPING_LIST_APP\\\\shopping_list_app\\\\src\\\\Components\\\\ListName.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListName = ({\n  listName,\n  onListNameChange,\n  isListOpen\n}) => {\n  _s();\n  //The necessary props are defined to handle the list name in the ItemList component.\n  const [localListName, setLocalListName] = useState(listName);\n  useEffect(() => {\n    setLocalListName(listName);\n  }, [listName]);\n  const handleInputChange = e => {\n    //  allows to change de name if it is a new list.\n    if (!isListOpen) {\n      const newName = e.target.value;\n      setLocalListName(newName);\n      onListNameChange(newName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-name-container\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"list-name\",\n      type: \"text\",\n      placeholder: \"Name of your list\",\n      value: localListName,\n      onChange: handleInputChange,\n      disabled: isListOpen //  Disables the possibility to change the name if it is a list that was opened from the database.\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ListName, \"72Trgz/Cg3OCruncr0LZxIZDNpk=\");\n_c = ListName;\nexport default ListName;\nvar _c;\n$RefreshReg$(_c, \"ListName\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ListName","listName","onListNameChange","isListOpen","_s","localListName","setLocalListName","handleInputChange","e","newName","target","value","className","children","type","placeholder","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/romir/Desktop/01_SHOPPING_LIST_APP/shopping_list_app/src/Components/ListName.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ListName = ({ listName, onListNameChange, isListOpen }) => {//The necessary props are defined to handle the list name in the ItemList component.\r\n  const [localListName, setLocalListName] = useState(listName);\r\n\r\n  useEffect(() => {\r\n    setLocalListName(listName);\r\n  }, [listName]);\r\n\r\n  const handleInputChange = (e) => {\r\n    //  allows to change de name if it is a new list.\r\n    if (!isListOpen) {\r\n      const newName = e.target.value;\r\n      setLocalListName(newName);\r\n      onListNameChange(newName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='list-name-container'> \r\n      <input\r\n        className='list-name'\r\n        type=\"text\"\r\n        placeholder=\"Name of your list\"\r\n        value={localListName}\r\n        onChange={handleInputChange}\r\n        disabled={isListOpen} //  Disables the possibility to change the name if it is a list that was opened from the database.\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListName;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,gBAAgB;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAC;EAChE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAACK,QAAQ,CAAC;EAE5DJ,SAAS,CAAC,MAAM;IACdS,gBAAgB,CAACL,QAAQ,CAAC;EAC5B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMM,iBAAiB,GAAIC,CAAC,IAAK;IAC/B;IACA,IAAI,CAACL,UAAU,EAAE;MACf,MAAMM,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;MAC9BL,gBAAgB,CAACG,OAAO,CAAC;MACzBP,gBAAgB,CAACO,OAAO,CAAC;IAC3B;EACF,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCd,OAAA;MACEa,SAAS,EAAC,WAAW;MACrBE,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BJ,KAAK,EAAEN,aAAc;MACrBW,QAAQ,EAAET,iBAAkB;MAC5BU,QAAQ,EAAEd,UAAW,CAAC;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5BIJ,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
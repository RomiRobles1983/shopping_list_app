{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romir\\\\Desktop\\\\01_SHOPPING_LIST_APP\\\\shopping_list_app\\\\src\\\\Components\\\\ItemForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Style-sheets/ItemForm.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemForm(props) {\n  _s();\n  // the useState hook is used to create a state variableinput and its corresponding function setInput\n  const [input, setInput] = useState(\"\");\n\n  /* The manageChanges function is defined, which is used as an event handler for the onChange event\r\n    of the input field (when something is typed in the form, this change will be captured).*/\n  const manageChanges = e => {\n    setInput(e.target.value);\n  };\n  /*The function manageForm is created, which is used as an event handler for the onSubmit event \r\n  of the form. When the user submits the form a \"New Item\" will be created.*/\n  const manageForm = e => {\n    e.preventDefault();\n    const newItem = {\n      _id: uuidv4(),\n      text: input,\n      purchased: false\n    };\n    props.onSubmit(newItem);\n    setInput(\"\");\n  };\n  /* The function returns the form with the functions created for the onChange and on Submit events */\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"item-form\",\n    onSubmit: manageForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"item-input\",\n      type: \"text\",\n      placeholder: \"Item to buy\",\n      text: \"text\",\n      value: input // para que desaparezca el nombre del último item agregado\n      ,\n      onChange: manageChanges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"item-button\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 4\n  }, this);\n}\n_s(ItemForm, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = ItemForm;\nexport default ItemForm;\nvar _c;\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"names":["React","useState","v4","uuidv4","jsxDEV","_jsxDEV","ItemForm","props","_s","input","setInput","manageChanges","e","target","value","manageForm","preventDefault","newItem","_id","text","purchased","onSubmit","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/romir/Desktop/01_SHOPPING_LIST_APP/shopping_list_app/src/Components/ItemForm.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"../Style-sheets/ItemForm.css\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nfunction ItemForm(props){\r\n    \r\n    \r\n    // the useState hook is used to create a state variableinput and its corresponding function setInput\r\n    const[input, setInput] = useState(\"\");\r\n\r\n   /* The manageChanges function is defined, which is used as an event handler for the onChange event\r\n     of the input field (when something is typed in the form, this change will be captured).*/\r\n    const manageChanges = e => {\r\n       setInput(e.target.value);\r\n    }\r\n   /*The function manageForm is created, which is used as an event handler for the onSubmit event \r\n   of the form. When the user submits the form a \"New Item\" will be created.*/\r\n    const manageForm = e =>{\r\n        e.preventDefault();\r\n        const newItem ={\r\n            _id: uuidv4(),\r\n            text: input,\r\n            purchased: false\r\n        }\r\n        props.onSubmit (newItem);\r\n        setInput(\"\");\r\n    }\r\n    /* The function returns the form with the functions created for the onChange and on Submit events */\r\nreturn(\r\n   <form className=\"item-form\"\r\n    onSubmit={manageForm}>\r\n    <input\r\n    className=\"item-input\"\r\n    type=\"text\"\r\n    placeholder=\"Item to buy\"\r\n    text=\"text\"\r\n    value={input}// para que desaparezca el nombre del último item agregado\r\n    onChange={manageChanges}\r\n    />\r\n\r\n<button className = \"item-button\">\r\nAdd\r\n</button>\r\n</form>\r\n\r\n);\r\n}\r\nexport default ItemForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,8BAA8B;AACrC,SAAQC,EAAE,IAAIC,MAAM,QAAO,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAGpB;EACA,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;AACH;EACI,MAAMU,aAAa,GAAGC,CAAC,IAAI;IACxBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EACF;AACH;EACI,MAAMC,UAAU,GAAGH,CAAC,IAAG;IACnBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAE;MACXC,GAAG,EAAEf,MAAM,CAAC,CAAC;MACbgB,IAAI,EAAEV,KAAK;MACXW,SAAS,EAAE;IACf,CAAC;IACDb,KAAK,CAACc,QAAQ,CAAEJ,OAAO,CAAC;IACxBP,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EACD;EACJ,oBACGL,OAAA;IAAMiB,SAAS,EAAC,WAAW;IAC1BD,QAAQ,EAAEN,UAAW;IAAAQ,QAAA,gBACrBlB,OAAA;MACAiB,SAAS,EAAC,YAAY;MACtBE,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBN,IAAI,EAAC,MAAM;MACXL,KAAK,EAAEL,KAAM;MAAA;MACbiB,QAAQ,EAAEf;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAENzB,OAAA;MAAQiB,SAAS,EAAG,aAAa;MAAAC,QAAA,EAAC;IAElC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGP;AAACtB,EAAA,CA1CQF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
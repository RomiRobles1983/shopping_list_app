{"ast":null,"code":"const API_URL = `http://localhost:8000`;\nconst openListByName = async listName => {\n  // Performs a GET request to the API to open the list by name\n  try {\n    const response = await fetch(`${API_URL}/lists/${listName}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Error fetching items for the list');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching items for the list:', error.message);\n    throw error;\n  }\n};\nexport default openListByName;","map":{"version":3,"names":["API_URL","openListByName","listName","response","fetch","method","headers","ok","Error","json","error","console","message"],"sources":["C:/Users/romir/Desktop/01_SHOPPING_LIST_APP/shopping_list_app/src/Components/api/OpenListByNameRequest.js"],"sourcesContent":["const API_URL = `http://localhost:8000`;\r\n\r\nconst openListByName = async (listName) => {// Performs a GET request to the API to open the list by name\r\n  try {\r\n    const response = await fetch(`${API_URL}/lists/${listName}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Error fetching items for the list');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching items for the list:', error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default openListByName;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAI,uBAAsB;AAEvC,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAAC;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,UAASE,QAAS,EAAC,EAAE;MAC3DG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;IACtD;IAEA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAClE,MAAMF,KAAK;EACb;AACF,CAAC;AAED,eAAeT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
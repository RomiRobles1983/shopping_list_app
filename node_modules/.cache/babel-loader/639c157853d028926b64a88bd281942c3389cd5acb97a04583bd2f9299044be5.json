{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romir\\\\Desktop\\\\01_SHOPPING_LIST_APP\\\\shopping_list_app\\\\src\\\\Components\\\\ItemList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ItemForm from \"./ItemForm.js\";\nimport \"../Style-sheets/ItemList.css\";\nimport Item from \"./Item\";\nimport ListName from \"./ListName\";\nimport BottomButton from \"./BottomButton\";\nimport saveList from \"./api/SaveListsRequest.js\";\nimport removeList from \"./api/RemoveListRequest.js\";\nimport { v4 as uuidv4 } from 'uuid';\nimport openListByName from \"./api/OpenListByNameRequest.js\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ItemList({\n  listName,\n  items,\n  onListNameChange\n}) {\n  _s();\n  // Component and props are defined\n  const [message, setMessage] = useState(null);\n  const [itemsState, setItems] = useState(items || []);\n  const [localListName, setLocalListName] = useState(listName || '');\n  const [isListOpen, setIsListOpen] = useState(false); //useState to define various local states, including message for messages, itemsState for list items,\n  const history = useHistory(); //history is used to access React Router's browsing history.\n\n  // OPEN LIST FUNCTION\n\n  const openList = async listName => {\n    try {\n      const loadedList = await openListByName(listName); // Use the function openListByName in ./api/OpenListByNameRequest to open a list by name. \n\n      //// Checks if loaded items have _id, if not, assigns a new one//Prevents errors when the database does not give id to items and they are passed as undefined\n      const updatedItems = loadedList.items.map(item => {\n        const newItem = {\n          ...item,\n          _id: item._id || uuidv4().toString()\n        };\n        console.log('Generated _id:', newItem._id); //Print the Check the generated id (control)\n        return newItem;\n      });\n\n      //Print the all the generated id (control)\n      console.log('Generated _ids:', updatedItems.map(item => item._id));\n      setItems(updatedItems);\n      setLocalListName(loadedList.name || '');\n    } catch (error) {\n      console.error('Error opening the list:', error.message);\n    }\n  };\n\n  //useEffect to load the list name  or renaming the list.\n  useEffect(() => {\n    if (listName) {\n      openList(listName);\n    }\n  }, [listName]);\n\n  //Use useEffect to update the status with the items and the list name when they change.\n  useEffect(() => {\n    setItems(items || []);\n    setLocalListName(listName || '');\n  }, [items, listName]);\n\n  // ADD ITEM FUNCTION (text-_id)\n  const addItem = item => {\n    if (item.text.trim()) {\n      item.text = item.text.trim();\n      item._id = uuidv4().toString(); // Asign a unique id-\n      const currentItems = [item, ...itemsState];\n      setItems(currentItems);\n    }\n  };\n\n  //REMOVE ITEM FUNCTION (_id)\n\n  const removeItem = id => {\n    console.log('Removing item with id:', id);\n    const currentItems = itemsState.filter(item => item._id !== id);\n    setItems(currentItems);\n  };\n\n  //SET AS PURCHASED FUNCTION (_id)// opposes the current state by changing purchased from TRUE to FALSE each time the item's text is clicked (a new array is created)\n  const setAsPurchased = id => {\n    console.log('Setting as purchased item with id:', id);\n    const currentItems = itemsState.map(item => item._id === id ? {\n      ...item,\n      purchased: !item.purchased\n    } : item);\n    setItems(currentItems);\n  };\n\n  //SAVE LIST FUNCTION\n\n  const handleSaveList = async () => {\n    try {\n      if (localListName.trim() === '') {\n        throw new Error('Your list has no name'); //Check if the list has a name\n      }\n\n      const listData = {\n        name: localListName,\n        items: itemsState.map(item => {\n          /* Destruct the component, remove the _id field before sending it (the rest) to the backend. Added because of problems \r\n          to handle item ids when the list is opened from the database.*/\n          const {\n            _id,\n            ...rest\n          } = item;\n          return rest;\n        })\n      };\n      const savedList = await saveList(listData);\n      console.log('Saved LIST:', savedList);\n      setMessage(`Your list \" ${localListName}\" has been saved.`);\n\n      //// Wait 3 seconds before redirecting to the home page.\n      setTimeout(() => {\n        setMessage(null);\n        history.push('/');\n      }, 3000);\n    } catch (error) {\n      console.error('Error saving the list:', error.message);\n      setMessage(`Your list \"${localListName}\" could not be saved: ${error.message}`);\n    }\n  };\n  const clearListInfo = () => {\n    console.log('handleRemoveList function called');\n    setItems([]);\n    setLocalListName('');\n  };\n  const handleRemoveList = async () => {\n    clearListInfo();\n    try {\n      console.log('Removing list with name:', localListName);\n      const removedList = await removeList(localListName);\n      console.log('Value returned by removeList:', removedList);\n      setMessage(`The list has been removed.`);\n\n      // Añade un pequeño retraso antes de imprimir el mensaje\n      setTimeout(() => {\n        console.log('Lista eliminada:', removedList);\n      }, 100);\n    } catch (error) {\n      console.error('Error during removeList:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(ListName, {\n        listName: localListName,\n        onListNameChange: newName => {\n          setLocalListName(newName);\n          onListNameChange(newName);\n        },\n        isListOpen: isListOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n        onSubmit: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), itemsState.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        id: item._id,\n        text: item.text,\n        purchased: item.purchased,\n        removeItem: () => removeItem(item._id),\n        setAsPurchased: () => setAsPurchased(item._id)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 3\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttom-buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(BottomButton, {\n          isSaveListButton: true,\n          onClick: handleSaveList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BottomButton, {\n          isSaveListButton: false,\n          onClick: () => {\n            console.log('Button clicked');\n            handleRemoveList();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ItemList, \"PiOJqfQ06SvjZ5YJzYbOG+OtONU=\", false, function () {\n  return [useHistory];\n});\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","useState","useEffect","ItemForm","Item","ListName","BottomButton","saveList","removeList","v4","uuidv4","openListByName","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemList","listName","items","onListNameChange","_s","message","setMessage","itemsState","setItems","localListName","setLocalListName","isListOpen","setIsListOpen","history","openList","loadedList","updatedItems","map","item","newItem","_id","toString","console","log","name","error","addItem","text","trim","currentItems","removeItem","id","filter","setAsPurchased","purchased","handleSaveList","Error","listData","rest","savedList","setTimeout","push","clearListInfo","handleRemoveList","removedList","children","className","newName","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","isSaveListButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/romir/Desktop/01_SHOPPING_LIST_APP/shopping_list_app/src/Components/ItemList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ItemForm from \"./ItemForm.js\";\r\nimport \"../Style-sheets/ItemList.css\";\r\nimport Item from \"./Item\";\r\nimport ListName from \"./ListName\";\r\nimport BottomButton from \"./BottomButton\";\r\nimport saveList from \"./api/SaveListsRequest.js\";\r\nimport removeList from \"./api/RemoveListRequest.js\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport openListByName from \"./api/OpenListByNameRequest.js\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction ItemList({ listName, items, onListNameChange }) {// Component and props are defined\r\n  const [message, setMessage] = useState(null);\r\n  const [itemsState, setItems] = useState(items || []);\r\n  const [localListName, setLocalListName] = useState(listName || '')\r\n  const [isListOpen, setIsListOpen] = useState(false); //useState to define various local states, including message for messages, itemsState for list items,\r\n  const history = useHistory(); //history is used to access React Router's browsing history.\r\n\r\n\r\n  // OPEN LIST FUNCTION\r\n\r\n  const openList = async (listName) => {\r\n    try {\r\n      const loadedList = await openListByName(listName);// Use the function openListByName in ./api/OpenListByNameRequest to open a list by name. \r\n  \r\n      //// Checks if loaded items have _id, if not, assigns a new one//Prevents errors when the database does not give id to items and they are passed as undefined\r\n      const updatedItems = loadedList.items.map(item => {\r\n        const newItem = {\r\n          ...item,\r\n          _id: item._id || uuidv4().toString()\r\n        };\r\n        console.log('Generated _id:', newItem._id); //Print the Check the generated id (control)\r\n        return newItem;\r\n      });\r\n  \r\n      //Print the all the generated id (control)\r\n      console.log('Generated _ids:', updatedItems.map(item => item._id));\r\n  \r\n      setItems(updatedItems);\r\n      setLocalListName(loadedList.name || '');\r\n    } catch (error) {\r\n      console.error('Error opening the list:', error.message);\r\n    }\r\n  };\r\n\r\n\r\n//useEffect to load the list name  or renaming the list.\r\n  useEffect(() => {\r\n    if (listName) {\r\n      openList(listName);\r\n    }\r\n  }, [listName]);\r\n\r\n//Use useEffect to update the status with the items and the list name when they change.\r\n  useEffect(() => {\r\n    setItems(items || []);\r\n    setLocalListName(listName || '');\r\n  }, [items, listName]);\r\n\r\n\r\n// ADD ITEM FUNCTION (text-_id)\r\nconst addItem = (item) => {\r\n  if (item.text.trim()) {\r\n    item.text = item.text.trim();\r\n    item._id = uuidv4().toString();  // Asign a unique id-\r\n    const currentItems = [item, ...itemsState];\r\n    setItems(currentItems);\r\n  }\r\n};\r\n\r\n//REMOVE ITEM FUNCTION (_id)\r\n\r\n  const removeItem = (id) => {\r\n    console.log('Removing item with id:', id);\r\n    const currentItems = itemsState.filter((item) => item._id !== id);\r\n    setItems(currentItems);\r\n  };\r\n\r\n\r\n  //SET AS PURCHASED FUNCTION (_id)// opposes the current state by changing purchased from TRUE to FALSE each time the item's text is clicked (a new array is created)\r\n  const setAsPurchased = (id) => {\r\n    console.log('Setting as purchased item with id:', id);\r\n    const currentItems = itemsState.map((item) =>\r\n      item._id === id ? { ...item, purchased: !item.purchased } : item\r\n    );\r\n    setItems(currentItems);\r\n  };\r\n\r\n\r\n//SAVE LIST FUNCTION\r\n\r\nconst handleSaveList = async () => {\r\n  try {\r\n    if (localListName.trim() === '') {\r\n      throw new Error('Your list has no name');//Check if the list has a name\r\n    }\r\n\r\n    const listData = {\r\n      name: localListName,\r\n      items: itemsState.map(item => {\r\n        /* Destruct the component, remove the _id field before sending it (the rest) to the backend. Added because of problems \r\n        to handle item ids when the list is opened from the database.*/\r\n        const { _id, ...rest } = item;\r\n        return rest;\r\n      }),\r\n    };\r\n\r\n    const savedList = await saveList(listData);\r\n    console.log('Saved LIST:', savedList);\r\n\r\n    setMessage(`Your list \" ${localListName}\" has been saved.`);\r\n\r\n    //// Wait 3 seconds before redirecting to the home page.\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n      history.push('/');\r\n    }, 3000);\r\n  } catch (error) {\r\n    console.error('Error saving the list:', error.message);\r\n    setMessage(`Your list \"${localListName}\" could not be saved: ${error.message}`);\r\n  }\r\n};\r\n  \r\nconst clearListInfo = () => {\r\n  console.log('handleRemoveList function called');\r\n  setItems([]);\r\n  setLocalListName('');\r\n};\r\n\r\nconst handleRemoveList = async () => {\r\n  clearListInfo ()\r\n\r\n  try {\r\n    console.log('Removing list with name:', localListName);\r\n    const removedList = await removeList(localListName);\r\n    console.log('Value returned by removeList:', removedList);\r\n\r\n    setMessage(`The list has been removed.`);\r\n\r\n    // Añade un pequeño retraso antes de imprimir el mensaje\r\n    setTimeout(() => {\r\n      console.log('Lista eliminada:', removedList);\r\n    }, 100);\r\n  } catch (error) {\r\n    console.error('Error during removeList:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"items-list-container\">\r\n        <ListName\r\n          listName={localListName}\r\n          onListNameChange={(newName) => {\r\n            setLocalListName(newName);\r\n            onListNameChange(newName);\r\n          }}\r\n          isListOpen={isListOpen}\r\n        />\r\n        <ItemForm onSubmit={addItem} />\r\n\r\n        {itemsState.map((item) => (\r\n  <Item\r\n    key={item._id}\r\n    id={item._id}\r\n    text={item.text}\r\n    purchased={item.purchased}\r\n    removeItem={() => removeItem(item._id)}\r\n    setAsPurchased={() => setAsPurchased(item._id)}\r\n  />\r\n))}\r\n        <div className=\"buttom-buttons-container\">\r\n          <BottomButton isSaveListButton={true} onClick={handleSaveList} />\r\n          <BottomButton isSaveListButton={false} onClick={() => { console.log('Button clicked'); handleRemoveList(); }} />\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {message && (\r\n        <div className=\"message-container\">\r\n          <p>{message}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romir\\\\Desktop\\\\01_SHOPPING_LIST_APP\\\\shopping_list_app\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TopButton from \"../Components/TopButton\";\nimport openLists from \"./api/OpenListsRequest\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../Style-sheets/Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [isOpenListClicked, setIsOpenListClicked] = useState(false); // useState to manage the state of lists and isOpenListClicked.\n  const history = useHistory(); // useHistory to access the React Router browsing history object.\n\n  //  Handles the opening of the lists stored in the database according to the api in OpenListRequest.js\n  useEffect(() => {\n    const fetchLists = async () => {\n      try {\n        const data = await openLists();\n        console.log('Lists received in Home.js:', data);\n        setLists(data);\n      } catch (error) {\n        console.error('Error fetching lists:', error);\n      }\n    };\n    fetchLists();\n  }, []);\n  const handleOpenListClick = () => {\n    // Handles the buttons: setIsOpenListClicked as TRUE setIsOpenListClicked , when the OPEN LIST button is clicked.\n    setIsOpenListClicked(true);\n  };\n  const handleCreateListClick = () => {\n    //  Handles the buttons: send to the path \"/create-list\". when the CREATE LIST button is clicked.\n    history.push('/create-list');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(TopButton, {\n        isCreateListButton: true // Render the Top Button Component with the necessary props to create the \"CREATE LIST\" button.\n        ,\n        buttonText: \"CREATE LIST\",\n        onClick: handleCreateListClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopButton, {\n        isCreateListButton: false //Render the Top Button Component with the necessary props to create the \"OPEN LIST\" button.\n        ,\n        buttonText: \"OPEN LIST\",\n        onClick: handleOpenListClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isOpenListClicked &&\n    /*#__PURE__*/\n    //Manages the opening of the names of the lists saved in the database from a mapping using the name property.\n    _jsxDEV(\"div\", {\n      className: \"lists-names-buttons-container\",\n      children: lists.map(list => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/open-list/${list.name}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"lists-names-buttons\",\n          children: list.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, list._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"SDoTF0dNPMbPhzjyYF36YgcuaHE=\", false, function () {\n  return [useHistory];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","TopButton","openLists","Link","useHistory","jsxDEV","_jsxDEV","Home","_s","lists","setLists","isOpenListClicked","setIsOpenListClicked","history","fetchLists","data","console","log","error","handleOpenListClick","handleCreateListClick","push","className","children","isCreateListButton","buttonText","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","list","to","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/romir/Desktop/01_SHOPPING_LIST_APP/shopping_list_app/src/Components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TopButton from \"../Components/TopButton\";\r\nimport openLists from \"./api/OpenListsRequest\";\r\nimport { Link, useHistory } from \"react-router-dom\"; \r\nimport \"../Style-sheets/Home.css\";\r\n\r\nfunction Home() {\r\n  const [lists, setLists] = useState([]); \r\n  const [isOpenListClicked, setIsOpenListClicked] = useState(false);  // useState to manage the state of lists and isOpenListClicked.\r\n  const history = useHistory(); // useHistory to access the React Router browsing history object.\r\n\r\n\r\n//  Handles the opening of the lists stored in the database according to the api in OpenListRequest.js\r\n  useEffect(() => {\r\n    const fetchLists = async () => {\r\n      try {\r\n        const data = await openLists();\r\n        console.log('Lists received in Home.js:', data);\r\n        setLists(data);\r\n      } catch (error) {\r\n        console.error('Error fetching lists:', error);\r\n      }\r\n    };\r\n\r\n    fetchLists();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleOpenListClick = () => { // Handles the buttons: setIsOpenListClicked as TRUE setIsOpenListClicked , when the OPEN LIST button is clicked.\r\n    setIsOpenListClicked(true);\r\n  };\r\n\r\n\r\n  const handleCreateListClick = () => {//  Handles the buttons: send to the path \"/create-list\". when the CREATE LIST button is clicked.\r\n    history.push('/create-list');\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className='top-buttons-container'>\r\n        <TopButton\r\n          isCreateListButton={true} // Render the Top Button Component with the necessary props to create the \"CREATE LIST\" button.\r\n          buttonText=\"CREATE LIST\"\r\n          onClick={handleCreateListClick} \r\n        />\r\n\r\n        <TopButton\r\n          isCreateListButton={false} //Render the Top Button Component with the necessary props to create the \"OPEN LIST\" button.\r\n          buttonText=\"OPEN LIST\"\r\n          onClick={handleOpenListClick}\r\n        />\r\n      </div>\r\n\r\n\r\n      {isOpenListClicked && ( //Manages the opening of the names of the lists saved in the database from a mapping using the name property.\r\n        <div className='lists-names-buttons-container'>\r\n          {lists.map((list) => (\r\n            <Link key={list._id} to={`/open-list/${list.name}`}>\r\n              <button className='lists-names-buttons'>\r\n                {list.name}\r\n              </button>\r\n            </Link>\r\n          ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n  \r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}